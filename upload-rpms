#!/bin/bash
set -e

SELFDIR=$(dirname "$0")
SELFDIR=$(cd "$SELFDIR" && pwd)
# shellcheck source=../lib/library.sh
source "$SELFDIR/lib/library.sh"

API_USERNAME=
API_KEY_PATH=
CONCURRENCY=4
DRY_RUN=false
BINTRAY_ORG=fullstaq
REPO_NAME=fullstaq-ruby-yum
REPO_PACKAGE_VERSION=$(date +%Y-%m-%d)
REPUBLISH=false
FILES=()

function usage()
{
    echo "Usage: ./upload-rpms <OPTIONS> <FILES...>"
    echo "Upload RPM packages to Fullstaq Ruby's official YUM server."
    echo
    echo "Required options:"
    echo "  -u          Bintray API username"
    echo "  -k          Path to Bintray API key file"
    echo
    echo "Optional options:"
    echo "  -j NUM      Upload concurrency (default: $CONCURRENCY)"
    echo "  -R          Dry run: don't actually upload"
    echo "  -O          Bintray organization name (default: $BINTRAY_ORG)"
    echo "  -n          Repository name to upload to (default: $REPO_NAME)"
    echo "  -v          Bintray package version number (default: $REPO_PACKAGE_VERSION)"
    echo "  -f          Force overwrite already published package"
    echo "  -i          Don't error when package with existing name already exists"
    echo "  -h          Show usage"
}

function parse_options()
{
    local OPTIND=1
    local ORIG_ARGV
    local opt
    while getopts "u:k:j:RO:n:v:fih" opt; do
        case "$opt" in
        u)
            API_USERNAME="$OPTARG"
            ;;
        k)
            API_KEY_PATH=$(absolute_path "$OPTARG")
            ;;
        j)
            CONCURRENCY="$OPTARG"
            ;;
        R)
            DRY_RUN=true
            ;;
        O)
            BINTRAY_ORG="$OPTARG"
            ;;
        n)
            REPO_NAME="$OPTARG"
            ;;
        v)
            REPO_PACKAGE_VERSION="$OPTARG"
            ;;
        f)
            REPUBLISH=true
            ;;
        i)
            IGNORE_EXISTING=true
            ;;
        h)
            usage
            exit
            ;;
        *)
            return 1
            ;;
        esac
    done

    (( OPTIND -= 1 )) || true
    shift $OPTIND || true
    ORIG_ARGV=("$@")

    if [[ "$API_USERNAME" = "" ]]; then
        echo 'ERROR: please specify a Bintray API username with -u.' >&2
        exit 1
    fi
    if [[ "$API_KEY_PATH" = "" ]]; then
        echo 'ERROR: please specify a Bintray API key file path with -k.' >&2
        exit 1
    fi
    if [[ $# -eq 0 ]]; then
        echo 'ERROR: please specify one or more RPM files to upload.' >&2
        exit 1
    fi
    FILES=("$@")
}

parse_options "$@"

if tty -s; then
    TTY_ARGS=(-t -i)
else
    TTY_ARGS=()
fi

UTILITY_IMAGE_VERSION=$(read_single_value_file "$SELFDIR/environments/utility/image_tag")

MOUNT_ARGS=()
for F in "${FILES[@]}"; do
    ABS_PATH=$(absolute_path "$F")
    MOUNT_ARGS+=(-v "$ABS_PATH:/input/$ABS_PATH:ro")
done

echo '--- Entering main Docker container ---'
verbose_run docker run --rm --init "${TTY_ARGS[@]}" \
    -v "$SELFDIR:/system:ro" \
    -v "$API_KEY_PATH:/bintray_api_key.txt:ro" \
    "${MOUNT_ARGS[@]}" \
    -e "API_USERNAME=$API_USERNAME" \
    -e "CONCURRENCY=$CONCURRENCY" \
    -e "DRY_RUN=$DRY_RUN" \
    -e "BINTRAY_ORG=$BINTRAY_ORG" \
    -e "REPO_NAME=$REPO_NAME" \
    -e "REPO_PACKAGE_VERSION=$REPO_PACKAGE_VERSION" \
    -e "REPUBLISH=$REPUBLISH" \
    -e "IGNORE_EXISTING=$IGNORE_EXISTING" \
    --user "$(id -u):$(id -g)" \
    "fullstaq/ruby-build-env-utility:$UTILITY_IMAGE_VERSION" \
    /system/container-entrypoints/upload-rpms
